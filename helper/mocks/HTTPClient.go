// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	url "net/url"
)

// HTTPClient is an autogenerated mock type for the HTTPClient type
type HTTPClient struct {
	mock.Mock
}

// MakeRequest provides a mock function with given fields: ctx, httpMethod, _a2, requestData
func (_m *HTTPClient) MakeRequest(ctx context.Context, httpMethod string, _a2 *url.URL, requestData interface{}) ([]byte, int, error) {
	ret := _m.Called(ctx, httpMethod, _a2, requestData)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(context.Context, string, *url.URL, interface{}) []byte); ok {
		r0 = rf(ctx, httpMethod, _a2, requestData)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 int
	if rf, ok := ret.Get(1).(func(context.Context, string, *url.URL, interface{}) int); ok {
		r1 = rf(ctx, httpMethod, _a2, requestData)
	} else {
		r1 = ret.Get(1).(int)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(context.Context, string, *url.URL, interface{}) error); ok {
		r2 = rf(ctx, httpMethod, _a2, requestData)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}
